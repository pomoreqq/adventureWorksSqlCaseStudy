-- üìä Purchasing Case Study ‚Äì Zadania
-- üîπ ≈Åatwe (5) ‚Äì proste filtry i agregacje

-- Lista wszystkich dostawc√≥w (Vendor) z ich CreditRating i statusem (ActiveFlag, PreferredVendorStatus).
select * from purchasing.vendor;
select name,creditrating,activeflag,preferredvendorstatus from purchasing.vendor
-- Liczba aktywnych dostawc√≥w (ActiveFlag = 1).
select * from purchasing.vendor
where activeflag = true;
-- Rozk≈Çad status√≥w (Status) w PurchaseOrderHeader ‚Äì ile zam√≥wie≈Ñ ma ka≈ºdy status.
select status,count(*) as orderCount from purchasing.purchaseorderheader
group by status;
-- Najczƒô≈õciej zamawiane produkty (TOP 10 wg SUM(OrderQty) w PurchaseOrderDetail).
select productid,sum(orderqty) as totalsum from purchasing.purchaseorderdetail
group by productid
order by totalsum desc
limit 10
-- ≈ÅƒÖczna liczba zam√≥wie≈Ñ (PurchaseOrderHeader) per rok (OrderDate).
select extract(year from orderdate) as yr,count(*) from purchasing.purchaseorderheader
group by yr
-- üî∏ ≈örednie (10) ‚Äì joiny, daty, pivoty, dodatkowa logika

-- ≈öredni czas realizacji zam√≥wienia per dostawca: AVG(ShipDate ‚Äì OrderDate) (tylko gdy obie daty sƒÖ niepuste).
select vendorid,extract(epoch from avg(shipdate-orderdate))/86400 as avgOrder from purchasing.purchaseorderheader
where shipdate is not null and orderdate is not null
group by vendorid
order by avgorder
-- ≈ÅƒÖczna warto≈õƒá zam√≥wie≈Ñ (SUM(OrderQty * UnitPrice)) per dostawca (JOIN Header + Detail).
select * from purchasing.purchaseorderheader
select poh.vendorid,sum(pod.orderqty * pod.unitprice) as totalSum from purchasing.purchaseorderdetail pod
inner join purchasing.purchaseorderheader poh
on poh.purchaseorderid = pod.purchaseorderid
group by poh.vendorid
order by totalsum desc
-- Najwiƒôksze pojedyncze zam√≥wienie warto≈õciowo w ka≈ºdym roku (JOIN + okno/podzapytnie).
with cte as (
select extract(year from orderdate) as yr,purchaseorderid,subtotal from purchasing.purchaseorderheader
group by yr,purchaseorderid
order by yr,subtotal desc
),
cte2 as (
select yr,purchaseorderid,subtotal,row_number() over(partition by yr order by subtotal desc) as rownumber from cte
)
select * from cte2
where rownumber = 1;

-- TOP 5 produkt√≥w z najwiƒôkszym kosztem zakupu w historii.
select productid,sum(orderqty*unitprice) as sumTotal from purchasing.purchaseorderdetail
group by productid
order by sumtotal desc
limit 5
-- ≈örednia liczba pozycji w zam√≥wieniu (COUNT(detail)/COUNT(header)) per rok.
select extract(year from poh.orderdate) as yr, count(pod.purchaseorderdetailid)::numeric/count(distinct pod.purchaseorderid) as ratio from purchasing.purchaseorderheader poh
inner join purchasing.purchaseorderdetail pod
on pod.purchaseorderid = poh.purchaseorderid
group by yr

-- Liczba dostawc√≥w przypisanych do ka≈ºdej kategorii (ProductVendor ‚Üí Product ‚Üí Subcategory ‚Üí Category).
select pc.name,count(distinct pv.businessentityid) from purchasing.productvendor pv
inner join production.product p
on p.productid = pv.productid
inner join production.productsubcategory psc
on psc.productsubcategoryid = p.productsubcategoryid
inner join production.productcategory pc
on pc.productcategoryid = psc.productcategoryid
group by pc.name
-- Por√≥wnanie ≈õredniej ceny zakupu produktu (PurchaseOrderDetail) z jego StandardCost.
with cte as (
select productid,round(avg(unitprice),2) as avgpricefromdetail from purchasing.purchaseorderdetail
group by productid
order by productid
),
cte2 as (select productid,round(avg(standardprice),2) as avgStandardFromVendor from purchasing.productvendor
group by productid
)
select cte.productid,cte.avgpricefromdetail,cte2.avgStandardFromVendor,
case
	when cte.avgpricefromdetail > cte2.avgstandardfromvendor then 1
	else 0 
end as isAvgMoreThanStandard
from cte
left join cte2
on cte.productid = cte2.productid
-- Analiza sezonowo≈õci: ≈ÇƒÖczna warto≈õƒá zakup√≥w per miesiƒÖc (trend czasowy).
select extract(year from orderdate) as yr,extract(month from orderdate) as mnth,sum(subtotal) from purchasing.purchaseorderheader
group by yr,mnth
order by yr,mnth
-- Pivot: rozk≈Çad status√≥w zam√≥wie≈Ñ (Status) per rok ‚Äì wiersze = rok, kolumny = statusy, warto≈õci = liczba zam√≥wie≈Ñ.
SELECT
    EXTRACT(YEAR FROM OrderDate) AS yr,
    COUNT(*) FILTER (WHERE Statusshipmethodid = 1) AS status_1,
    COUNT(*) FILTER (WHERE Status = 2) AS status_2,
    COUNT(*) FILTER (WHERE Status = 3) AS status_3,
    COUNT(*) FILTER (WHERE Status = 4) AS status_4
FROM purchasing.PurchaseOrderHeader
GROUP BY yr
ORDER BY yr;
-- Pivot: udzia≈Ç metod dostawy (ShipMethod) per rok ‚Äì wiersze = rok, kolumny = ShipMethod, warto≈õci = % zam√≥wie≈Ñ.
select * from purchasing.purchaseorderheader
select distinct shipmethodid from purchasing.purchaseorderheader

with cte as (
select extract(year from orderdate) as yr,
	COUNT(*) FILTER (WHERE shipmethodid = 1) AS ship_1,
    COUNT(*) FILTER (WHERE shipmethodid = 2) AS ship_2,
    COUNT(*) FILTER (WHERE shipmethodid = 3) AS ship_3,
    COUNT(*) FILTER (WHERE shipmethodid = 4) AS ship_4,
	COUNT(*) FILTER (WHERE shipmethodid = 5) AS ship_5,
count(*) as totalcount
from purchasing.purchaseorderheader
group by yr
order by yr
)
select yr,ship_1::numeric/totalcount * 100 as shipratio1,
ship_2::numeric/totalcount * 100 as shipratio2,
ship_3::numeric/totalcount * 100 as shipratio3,
ship_4::numeric/totalcount * 100 as shipratio4,
ship_5::numeric/totalcount * 100 as shipratio5
from cte

-- üî∫ Trudne (10) ‚Äì okna, Pareto, analizy ryzyka, zaawansowane pivoty

-- Dostawcy, kt√≥rzy dostarczajƒÖ >10 r√≥≈ºnych produkt√≥w (JOIN ProductVendor, COUNT(DISTINCT ProductID)).
select v.name,count(distinct pv.productid) as uniqueproductcount from purchasing.productvendor pv
inner join purchasing.vendor v
on v.businessentityid = pv.businessentityid
group by v.name
having count(distinct pv.productid) > 10
order by  uniqueproductcount desc
-- Dla ka≈ºdego dostawcy policz udzia≈Ç warto≈õciowy w ca≈Ço≈õci zakup√≥w (% udzia≈Ç w SUMA wszystkich zam√≥wie≈Ñ).
with cte as (
select vendorid,sum(subtotal) as sumperv from purchasing.purchaseorderheader
group by vendorid
),
cte2 as (
select vendorid,sumperv,(select sum(subtotal) from purchasing.purchaseorderheader) as totalsum from cte
) 
select v.name,round(sumperv/totalsum * 100,2) as percentageoftotal from cte2
left join purchasing.vendor v
on cte2.vendorid = v.businessentityid
order by percentageoftotal desc
-- Produkty kupowane od wiƒôcej ni≈º jednego dostawcy.
select productid,count(distinct businessentityid) from purchasing.productvendor
group by productid
having count(distinct businessentityid) > 1;
-- Zmiana ≈õredniej ceny zakupu produktu w czasie: r√≥≈ºnica miƒôdzy pierwszym a ostatnim okresem (FIRST_VALUE / LAST_VALUE).
-- nie da sie
-- Analiza Pareto: 20% dostawc√≥w odpowiada za 80% warto≈õci zakup√≥w (okna + cumsum).
-- done wczesniej
-- ≈öredni lead time (AverageLeadTime z ProductVendor) per kategoria produktu.
select pc.name,avg(pv.averageleadtime) as days from purchasing.productvendor pv
inner join production.product p
on pv.productid = p.productid
inner join production.productsubcategory psc
on psc.productsubcategoryid = p.productsubcategoryid
inner join production.productcategory pc
on pc.productcategoryid = psc.productcategoryid
group by pc.name
-- Identyfikacja zam√≥wie≈Ñ, gdzie ReceivedQty < OrderQty (niedostawy) i ich odsetek w ca≈Ço≈õci zam√≥wie≈Ñ.
with cte as (
select count(*) as notenoughcount from purchasing.purchaseorderdetail
where orderqty > receivedqty
)
select notenoughcount::numeric/(select count(*) from purchasing.purchaseorderdetail) from cte
-- R√≥≈ºnorodno≈õƒá portfela: dla ka≈ºdego dostawcy liczba r√≥≈ºnych podkategorii produkt√≥w.
select pv.businessentityid,count(distinct psc.productsubcategoryid) from purchasing.productvendor pv
inner join production.product p
on pv.productid = p.productid
inner join production.productsubcategory psc
on psc.productsubcategoryid = p.productsubcategoryid
group by pv.businessentityid
-- Analiza ryzyka: dostawcy, kt√≥rzy sƒÖ jedynymi dostawcami w swojej kategorii (monopol).
select pc.name,count(distinct pv.businessentityid) from purchasing.productvendor pv
inner join production.product p
on pv.productid = p.productid
inner join production.productsubcategory psc
on psc.productsubcategoryid = p.productsubcategoryid
inner join production.productcategory pc
on pc.productcategoryid = psc.productcategoryid
group by pc.name
-- Pivot: suma warto≈õci zam√≥wie≈Ñ per dostawca i rok ‚Äì wiersze = dostawcy, kolumny = lata, warto≈õci = suma (ORDER BY suma ca≈Ço≈õci malejƒÖco).
select distinct extract(year from orderdate) from purchasing.purchaseorderheader
-- 2013
-- 2011
-- 2014
-- 2012
select vendorid,
sum(subtotal) filter (where extract(year from orderdate) = 2011) as date2011,
sum(subtotal) filter (where extract(year from orderdate) = 2012) as date2012,
sum(subtotal) filter (where extract(year from orderdate) = 2013) as date2013,
sum(subtotal) filter (where extract(year from orderdate) = 2014) as date2014,
sum(subtotal) as totalSum
from purchasing.purchaseorderheader
group by vendorid
order by totalsum desc
order by

-- üü° 5 ≈õrednich

-- ≈örednia i mediana warto≈õci zam√≥wienia (SubTotal) per rok.

-- Top 3 produkty z najwiƒôkszƒÖ liczbƒÖ dostawc√≥w (ProductVendor) w ka≈ºdej podkategorii (ProductSubcategory).

-- ≈öredni lead time per dostawca ‚Äì ale tylko dla tych, kt√≥rzy dostarczajƒÖ co najmniej 5 r√≥≈ºnych produkt√≥w.

-- Procent zam√≥wie≈Ñ z op√≥≈∫nionƒÖ dostawƒÖ (ShipDate > DueDate) per rok.

-- ≈ÅƒÖczna warto≈õƒá zam√≥wie≈Ñ per status (PurchaseOrderHeader.Status) i udzia≈Ç % w ca≈Çkowitej warto≈õci.

-- üî¥ 10 trudnych

-- Ranking dostawc√≥w wg ≈õredniego udzia≈Çu w zam√≥wieniach w czasie ‚Üí oblicz udzia≈Ç warto≈õciowy per rok, a nastƒôpnie ranking vendor√≥w w ka≈ºdym roku.

-- Wykrywanie anomalii cenowych: produkty, gdzie UnitPrice w zam√≥wieniu jest wy≈ºsze ni≈º ≈õrednia cena z ProductVendor.StandardPrice o > 2 odchylenia standardowe.

-- Pivot: udzia≈Ç % warto≈õci zam√≥wie≈Ñ (SubTotal) per status w podziale na lata ‚Äì wiersze = lata, kolumny = statusy, warto≈õci = procent warto≈õci.

-- Wielko≈õƒá zam√≥wie≈Ñ per dostawca: kwartyle (NTILE(4)) wg warto≈õci zam√≥wie≈Ñ, sprawd≈∫ rozk≈Çad dostawc√≥w w kwartylach.

-- Vendor concentration: dla ka≈ºdej kategorii produkt√≥w policz udzia≈Ç najwiƒôkszego dostawcy w warto≈õci zam√≥wie≈Ñ (np. vendor A odpowiada za 60% zam√≥wie≈Ñ w kategorii ‚ÄûComponents‚Äù).

-- Pierwsza i ostatnia data wsp√≥≈Çpracy z ka≈ºdym dostawcƒÖ (min i max OrderDate), oraz r√≥≈ºnica w latach ‚Äì ile lat trwa wsp√≥≈Çpraca.

-- ≈örednia cena zakupu w czasie: oblicz ≈õredniƒÖ UnitPrice produktu per rok, a nastƒôpnie policz % zmiany rok do roku.

-- Produkty z nieciƒÖg≈Ço≈õciƒÖ dostawc√≥w: znajd≈∫ produkty, kt√≥re w danym roku mia≈Çy co najmniej jednego dostawcƒô, a w kolejnym roku nie mia≈Çy ≈ºadnego (LEFT JOIN na lata).

-- Ranking stabilno≈õci cen: policz odchylenie standardowe UnitPrice per produkt; top 10 produkt√≥w o najmniejszej zmienno≈õci (stabilne ceny).

-- Koszt op√≥≈∫nie≈Ñ: warto≈õƒá zam√≥wie≈Ñ (SubTotal), kt√≥re zosta≈Çy wys≈Çane po DueDate ‚Äì per vendor i rok; ranking vendor√≥w wg najwiƒôkszego ≈ÇƒÖcznego kosztu op√≥≈∫nie≈Ñ.